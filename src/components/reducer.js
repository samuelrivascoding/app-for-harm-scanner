
import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  croppedPhoto:   'https://img.huffingtonpost.com/asset/5ab4d4ac2000007d06eb2c56.jpeg?cache=sih0jwle4e&ops=1910_1000'  ,
  visionResult: "tobacco",
  column2: [],
  keywords: [],
  matchedRows: [],
  healthInfo: [],
  isProcessingComplete: false,
  highlightedText: '', // Initially store an empty string
  isChatGPTPressed: false,
  isCompareButtonPressed: false,


};

const photoSlice = createSlice({

  name: "photo",
  initialState, 


  reducers: {
    setCroppedPhoto: (state, action) => {
      state.croppedPhoto = action.payload;
    },
    setHighlightedText: (state, action) => {
      state.highlightedText = action.payload; // Update highlighted text
    },
    setVisionResult: (state, action) => {
      state.visionResult  = action.payload;
    },
    setMatchedRows: (state, action) => {
      state.matchedRows = action.payload;
    },
    setHealthInfo: (state, action) => {
      state.healthInfo = action.payload;
    },
    setProcessingComplete(state, action) {
      state.isProcessingComplete = action.payload;
    },
    setChatGPTPressed(state, action) {
      state.isChatGPTPressed = action.payload;
    },
    setCompareButtonPressed(state, action) {
      state.isCompareButtonPressed = action.payload;
    },
  },
});

// Export actions generated from createSlice
export const {
  setHighlightedText,
  setCroppedPhoto,
  setVisionResult,
  setMatchedRows,
  setHealthInfo,
  setProcessingComplete,
  setChatGPTPressed,
  setCompareButtonPressed

} = photoSlice.actions;

// Export the reducer function generated by createSlice
export default photoSlice.reducer;